## ## ## # Counts of 30-day post-operative mortality, across intervals.
PWV_OS_NC_mortality_intervals <- data.frame(
n_infection_none = 0,
pct_no_infection = 0,
n_infection_0to2wk = 0,
pct_infection_0to2wk = 0,
n_infection_3to4wk = 0,
pct_infection_3to4wk = 0,
n_infection_5to6wk = 0,
pct_infection_5to6wk = 0,
n_infection_7wk = 0,
pct_infection_7wk = 0
)
PWV_OS_NC_mortality_intervals[seq(1,10,2)] <- PWV_OS_NC_mortality
## ## ## # Percentages of 30-day post-operative mortality, across intervals.
PWV_OS_NC_mortality_intervals[seq(2,10,2)] <-
(PWV_OS_NC_mortality_intervals[seq(1,10,2)] /
PWV_OS_NC_counts[2:ncol(PWV_OS_NC_counts)]) * 100
# ----
##################################################################
## Counts of 30-day post-operative mortality, across intervals. ##
## Cancer patients.                                             ##
##################################################################
# ----
# Count of patients in each of the categories for pre-operative infection
# status (stratified by surgery era; see above) also stratified by whether
# or not the patient died within 30 days of their surgery:
#   1. "Alive within 30-day post-operation"
#   2. "Dead within 30-day post-operation"
#
## # OpenSAFELY data, cancer patients.
OS_C_mortality <-
myData_OS_C %>% dplyr::group_by(era, postOp_mortality_30day) %>%
dplyr::summarise(n_per_group = sum(ifelse(preOperative_infection_status!=
"Error: Test result after surgery. Check study_definition.",1,0)),
n_infection_none = sum(ifelse(preOperative_infection_status==
"No record of pre-operative SARS-CoV-2 infection",1,0)),
n_infection_0to2wk = sum(ifelse(preOperative_infection_status==
"0-2 weeks record of pre-operative SARS-CoV-2 infection",1,0)),
n_infection_3to4wk = sum(ifelse(preOperative_infection_status==
"3-4 weeks record of pre-operative SARS-CoV-2 infection",1,0)),
n_infection_5to6wk = sum(ifelse(preOperative_infection_status==
"5-6 weeks record of pre-operative SARS-CoV-2 infection",1,0)),
n_infection_7wk = sum(ifelse(preOperative_infection_status==
">=7 weeks record of pre-operative SARS-CoV-2 infection",1,0))
)
OS_C_mortality <-
expand.grid(
era =
c("Error: No surgery", "Pre-pandemic", "Pandemic no vaccine", "Pandemic with vaccine"),
postOp_mortality_30day =
c("Alive within 30-day post-operation",
"Dead within 30-day post-operation",
"Error: Surgery after death",
"No death recorded",
"No surgery recorded",
"Missing")) %>%
dplyr::full_join(OS_C_mortality) %>%
dplyr::arrange(era) %>%
tidyr::replace_na(list("n_per_group" = 0,
"n_infection_none" = 0,
"n_infection_0to2wk" = 0,
"n_infection_3to4wk" = 0,
"n_infection_5to6wk" = 0,
"n_infection_7wk" = 0))
## ## # Pre-pandemic, OpenSAFELY data, no-cancer patients.
PP_OS_C_mortality <- OS_C_mortality %>%
dplyr::filter(era == "Pre-pandemic" &
postOp_mortality_30day=="Alive within 30-day post-operation") %>%
select(-c(era, postOp_mortality_30day, n_per_group)) %>% dplyr::ungroup()
## ## ## # Counts of 30-day post-operative mortality, across intervals.
PP_OS_C_mortality_intervals <- data.frame(
n_infection_none = 0,
pct_no_infection = 0,
n_infection_0to2wk = 0,
pct_infection_0to2wk = 0,
n_infection_3to4wk = 0,
pct_infection_3to4wk = 0,
n_infection_5to6wk = 0,
pct_infection_5to6wk = 0,
n_infection_7wk = 0,
pct_infection_7wk = 0
)
PP_OS_C_mortality_intervals[seq(1,10,2)] <- PP_OS_C_mortality
## ## ## # Percentages of 30-day post-operative mortality, across intervals.
PP_OS_C_mortality_intervals[seq(2,10,2)] <-
(PP_OS_C_mortality_intervals[seq(1,10,2)] /
PP_OS_C_counts[2:ncol(PP_OS_C_counts)]) * 100
## ## # Pandemic no vaccines, OpenSAFELY data, no-cancer patients.
PNV_OS_C_mortality <- OS_C_mortality %>%
dplyr::filter(era == "Pandemic no vaccine" &
postOp_mortality_30day=="Alive within 30-day post-operation") %>%
select(-c(era, postOp_mortality_30day, n_per_group)) %>% dplyr::ungroup()
## ## ## # Counts of 30-day post-operative mortality, across intervals.
PNV_OS_C_mortality_intervals <- data.frame(
n_infection_none = 0,
pct_no_infection = 0,
n_infection_0to2wk = 0,
pct_infection_0to2wk = 0,
n_infection_3to4wk = 0,
pct_infection_3to4wk = 0,
n_infection_5to6wk = 0,
pct_infection_5to6wk = 0,
n_infection_7wk = 0,
pct_infection_7wk = 0
)
PNV_OS_C_mortality_intervals[seq(1,10,2)] <- PNV_OS_C_mortality
## ## ## # Percentages of 30-day post-operative mortality, across intervals.
PNV_OS_C_mortality_intervals[seq(2,10,2)] <-
(PNV_OS_C_mortality_intervals[seq(1,10,2)] /
PNV_OS_C_counts[2:ncol(PNV_OS_C_counts)]) * 100
## ## # Pandemic with vaccines, OpenSAFELY data, no-cancer patients.
PWV_OS_C_mortality <- OS_C_mortality %>%
dplyr::filter(era == "Pandemic with vaccine" &
postOp_mortality_30day=="Alive within 30-day post-operation") %>%
select(-c(era, postOp_mortality_30day, n_per_group)) %>% dplyr::ungroup()
## ## ## # Counts of 30-day post-operative mortality, across intervals.
PWV_OS_C_mortality_intervals <- data.frame(
n_infection_none = 0,
pct_no_infection = 0,
n_infection_0to2wk = 0,
pct_infection_0to2wk = 0,
n_infection_3to4wk = 0,
pct_infection_3to4wk = 0,
n_infection_5to6wk = 0,
pct_infection_5to6wk = 0,
n_infection_7wk = 0,
pct_infection_7wk = 0
)
PWV_OS_C_mortality_intervals[seq(1,10,2)] <- PWV_OS_C_mortality
## ## ## # Percentages of 30-day post-operative mortality, across intervals.
PWV_OS_C_mortality_intervals[seq(2,10,2)] <-
(PWV_OS_C_mortality_intervals[seq(1,10,2)] /
PWV_OS_C_counts[2:ncol(PWV_OS_C_counts)]) * 100
# ----
#############################
## Construct counts table. ##
#############################
# ----
table_counts <-
rbind(
rep(NA, 6), # Pre-pandemic, COVIDSurg.
PP_OS_NC_counts, # Pre-pandemic, OpenSAFELY data, no-cancer patients.
PP_OS_C_counts, # Pre-pandemic, OpenSAFELY data, cancer patients.
COVIDSurg_counts,
PNV_OS_NC_counts, # Pandemic no vaccines, OpenSAFELY data, no-cancer patients.
PNV_OS_C_counts, # Pandemic no vaccines, OpenSAFELY data, cancer patients.
rep(NA, 6), # Pandemic with vaccines, COVIDSurg.
PWV_OS_NC_counts, # Pandemic with vaccines, OpenSAFELY data, no-cancer patients.
PWV_OS_C_counts # Pandemic with vaccines, OpenSAFELY data, cancer patients.
) %>% data.frame()
rownames(table_counts) <-
c(
"PP_COVIDSurg",
"PP_OS_NC",
"PP_OS_C",
"PNV_COVIDSurg",
"PNV_OS_NC",
"PNV_OS_C",
"PWV_COVIDSurg",
"PWV_OS_NC",
"PWV_OS_C"
)
write.csv(
x = table_counts,
file = here::here("output",
"table_Count of patients in each cohort, in each era, across all intervals.csv")
)
# ----
#################################################
## Construct mortality-across-intervals table. ##
#################################################
# ----
table_mortality_intervals <-
rbind(
COVIDSurg_mortality_intervals,
PNV_OS_NC_mortality_intervals,
PNV_OS_C_mortality_intervals,
rep(NA, 10),
PWV_OS_NC_mortality_intervals,
PWV_OS_C_mortality_intervals
)
rownames(table_mortality_intervals) <-
c(
"PNV_COVIDSurg",
"PNV_OS_NC",
"PNV_OS_C",
"PWV_COVIDSurg",
"PWV_OS_NC",
"PWV_OS_C"
)
write.csv(
x = table_mortality_intervals,
file = here::here("output",
"table_30day post-op mortality, in each era, across all intervals.csv")
)
# ----
#######################################
## Construct mortality-totals table. ##
#######################################
# ----
table_mortality_totals <-
rbind(
COVIDSurg_mortality_totals,
era_OS_NC_values,
era_OS_C_values
)
rownames(table_mortality_totals) <-
c(
"COVIDSurg",
"OS_NC",
"OS_C"
)
write.csv(
x = table_mortality_totals,
file = here::here("output",
"table_30day post-op mortality for each cohort, in each era.csv")
)
# ----
#############################################################
## Counts of 30-day post-operative mortality, in each era. ##
## Non-cancer patients.                                    ##
#############################################################
# ----
COVIDSurg_mortality_intervals
#############################################################
## Counts of 30-day post-operative mortality, in each era. ##
## Non-cancer patients.                                    ##
#############################################################
# ----
COVIDSurg_mortality_intervals[seq(1,10,2)]
#############################################################
## Counts of 30-day post-operative mortality, in each era. ##
## Non-cancer patients.                                    ##
#############################################################
# ----
sum(COVIDSurg_mortality_intervals[seq(1,10,2)])
#############################################################
## Counts of 30-day post-operative mortality, in each era. ##
## Non-cancer patients.                                    ##
#############################################################
# ----
sum(PNV_OS_NC_mortality_intervals[seq(1,10,2)])
#############################################################
## Counts of 30-day post-operative mortality, in each era. ##
## Non-cancer patients.                                    ##
#############################################################
# ----
sum(PP_OS_NC_mortality_intervals[seq(1,10,2)])
sum(PWV_OS_NC_mortality_intervals[seq(1,10,2)])
#############################################################
## Counts of 30-day post-operative mortality, in each era. ##
## Non-cancer patients.                                    ##
#############################################################
# ----
OS_NC_mortality_totals <- data.frame(
n_PP = rep(0,3),
pct_PP = rep(0,3),
n_PNV = rep(0,3),
pct_PNV = rep(0,3),
n_PWV = rep(0,3),
pct_PWV = rep(0,3)
)
#############################################################
## Counts of 30-day post-operative mortality, in each era. ##
## Non-cancer patients.                                    ##
#############################################################
# ----
OS_NC_mortality_totals <- data.frame(
n_PP = sum(PP_OS_NC_mortality_intervals[seq(1,10,2)]),
pct_PP = 0,
n_PNV = sum(PNV_OS_NC_mortality_intervals[seq(1,10,2)]),
pct_PNV = 0,
n_PWV = sum(PWV_OS_NC_mortality_intervals[seq(1,10,2)]),
pct_PWV = 0
)
OS_NC_mortality_totals
View(OS_NC_counts)
OS_NC_mortality_totals[seq(2,10,2)] <-
(OS_NC_mortality_totals[seq(1,10,2)] / PP_OS_NC_counts$n_total) * 100
OS_NC_mortality_totals[seq(1,10,2)]
#############################################################
## Counts of 30-day post-operative mortality, in each era. ##
## Non-cancer patients.                                    ##
#############################################################
# ----
OS_NC_mortality_totals <- data.frame(
n_PP = sum(PP_OS_NC_mortality_intervals[seq(1,10,2)]),
pct_PP = 0,
n_PNV = sum(PNV_OS_NC_mortality_intervals[seq(1,10,2)]),
pct_PNV = 0,
n_PWV = sum(PWV_OS_NC_mortality_intervals[seq(1,10,2)]),
pct_PWV = 0
)
OS_NC_mortality_totals[seq(2,10,2)]
OS_NC_mortality_totals
OS_NC_mortality_totals[seq(2,6,2)] <-
(OS_NC_mortality_totals[seq(1,6,2)] / PP_OS_NC_counts$n_total) * 100
OS_NC_mortality_totals
OS_NC_mortality_totals[seq(2,6,2)] <-
(OS_NC_mortality_totals[seq(1,6,2)] /
c(PP_OS_NC_counts$n_total,
PNV_OS_NC_counts$n_total,
PWV_OS_NC_counts$n_total)
) * 100
OS_NC_mortality_totals
PNV_OS_NC_counts$n_total
# OpenSAFELY data, cancer patients.
OS_C_mortality_totals <- data.frame(
n_PP = sum(PP_OS_C_mortality_intervals[seq(1,10,2)]),
pct_PP = 0,
n_PNV = sum(PNV_OS_C_mortality_intervals[seq(1,10,2)]),
pct_PNV = 0,
n_PWV = sum(PWV_OS_C_mortality_intervals[seq(1,10,2)]),
pct_PWV = 0
)
OS_C_mortality_totals[seq(2,6,2)] <-
(OS_C_mortality_totals[seq(1,6,2)] /
c(PP_OS_C_counts$n_total,
PNV_OS_C_counts$n_total,
PWV_OS_C_counts$n_total)
) * 100
#######################################
## Construct mortality-totals table. ##
#######################################
# ----
table_mortality_totals <-
rbind(
COVIDSurg_mortality_totals,
OS_NC_mortality_totals,
OS_C_mortality_totals
)
rm(table_mortality_totals)
COVIDSurg_mortality_totals
OS_NC_mortality_totals
OS_C_mortality_totals
rbind(
COVIDSurg_mortality_totals,
OS_NC_mortality_totals,
OS_C_mortality_totals
)
colnames(OS_NC_mortality_totals)<- colnames(COVIDSurg_mortality_totals)
colnames(OS_C_mortality_totals)<- colnames(COVIDSurg_mortality_totals)
#######################################
## Construct mortality-totals table. ##
#######################################
# ----
table_mortality_totals <-
rbind(
COVIDSurg_mortality_totals,
OS_NC_mortality_totals,
OS_C_mortality_totals
)
table_mortality_totals
rownames(table_mortality_totals) <-
c(
"COVIDSurg",
"OS_NC",
"OS_C"
)
table_mortality_totals
###################
## Plot the data ##
###################
# ----
# NOTE: Nest horizontal axes require the ggh4x package to be installed.
#
# Load and run the function that does the work.
source(here::here("analysis","fnc_preprintFigure_dataPlot.R"))
fnc_preprintFigure_dataPlot(data = OS_C6m_windowed_proportion_7wkPreOpInfection,
cohort = "with")
# preprintFigure.R
#
# This script produces plots of weekly, monthly, 2-monthly and 3-monthly
# summaries of the proportion of surgeries conducted more than 7 weeks from a
# positive PCR test for SARS-CoV-2 (as per the data available in OpenSAFELY).
#
# Data for two cohorts are plotted: surgery patients without a cancer diagnosis
# within +-6 months of surgery, and for patient with a cancer diagnosis within
# +-6 months of surgery.
#
# The plot area is annotated with key dates:
#   1. March 2020 - The first publication by the COVIDSurg Collaborative that
#      raised concerns about the mortality of surgery patients.
#   2. 17th March 2020 - Publication of NICE guidelines suggesting a 3-month
#      delay to all planned surgeries.
#   3. Mid-January 2021 - Specifically, 8th Dec 2020 + 5 weeks. The 8th December
#      2020 was the first date of SARS-CoV-2 vaccination. We estimated at least
#      three weeks for sufficient vaccine rollout. We added two weeks for the
#      vaccine to take effect, according to efficacy studies
#      (https://www.nejm.org/doi/full/10.1056/nejmoa2034577)
#   4. March 2021 - Another publication by the COVIDSurg Collaborative that
#      detailed the relationship between the 30-post opertative mortality and the
#      interval between a positive PCR test for SARS-CoV-2 and a patient's
#      surgery.
#
library(ggplot2)
library(ggh4x)
library(RcppRoll)
library(tidyverse)
library(lubridate)
#####################
## Filter datasets ##
#####################
# ----
# Select only the variables needed for plotting.
myPlotData <- myData %>% select(c(
date_surgery,
category_cancer_within_6mths_surgery,
preOperative_infection_status,
Week_surgery,
Month_surgery,
Year_surgery
))
# Filter the dataset for patients with a record of a cancer diagnosis within
# 6 months before or after their surgery.
# Naming convention is:
#   - OS = OpenSAFELY data
#   - C  = Cancer patient
#   - NC = Non-cancer patient
#
# OpenSAFELY data, cancer patients, within 6 months of surgery.
myData_OS_C6m <- myPlotData %>%
dplyr::filter(category_cancer_within_6mths_surgery ==
"Cancer diagnosis within 6mths before surgery" |
category_cancer_within_6mths_surgery ==
"Cancer diagnosis within 6mths after surgery")
# OpenSAFELY data, cancer patients, NOT within 6 months of surgery.
myData_OS_NC6m <- myPlotData %>%
dplyr::filter(category_cancer_within_6mths_surgery !=
"Cancer diagnosis within 6mths before surgery" |
category_cancer_within_6mths_surgery !=
"Cancer diagnosis within 6mths after surgery")
# ----
#################################
## Calculate the data to plot. ##
#################################
# ----
# Define timeline.
startDate = "01-03-2020"
endDate = "31-03-2022"
# Load and run the function that does the work.
source(here::here("analysis","fnc_preprintFigure_dataPrep.R"))
OS_C6m_windowed_proportion_7wkPreOpInfection <-
fnc_preprintFigure_dataPrep(data = myData_OS_C6m,
start = startDate,
end = endDate)
OS_NC6m_windowed_proportion_7wkPreOpInfection <-
fnc_preprintFigure_dataPrep(data = myData_OS_NC6m,
start = startDate,
end = endDate)
# Save the plot data.
write.csv(
x = OS_C6m_windowed_proportion_7wkPreOpInfection,
file = here::here("output",
"plotData_OS_C6m.csv")
)
write.csv(
x = OS_NC6m_windowed_proportion_7wkPreOpInfection,
file = here::here("output",
"plotData_OS_NC6m.csv")
)
# ----
###################
## Plot the data ##
###################
# ----
# NOTE: Nest horizontal axes require the ggh4x package to be installed.
#
# Load and run the function that does the work.
source(here::here("analysis","fnc_preprintFigure_dataPlot.R"))
fnc_preprintFigure_dataPlot(data = OS_C6m_windowed_proportion_7wkPreOpInfection,
cohort = "with")
fnc_preprintFigure_dataPlot(data = OS_NC6m_windowed_proportion_7wkPreOpInfection,
cohort = "without")
# ----
data = myData_OS_C6m
start = startDate
end = endDate
View(fnc_preprintFigure_dataPrep)
View(fnc_preprintFigure_dataPrep)
# Make timeline backbone.
backbone <-
seq(lubridate::dmy(start), lubridate::dmy(end), by = 'week') %>%
data.frame() %>%
mutate(Year_surgery = lubridate::year(.),
Month_surgery = lubridate::month(., label = T),
Week_surgery = lubridate::week(.))
colnames(backbone)[1] <- "Date"
# Weekly proportion of surgeries conducted more than 7 weeks from a positive
# PCR test for SARS-CoV-2.
relevant_preOperative_infection_status <-
c("0-2 weeks record of pre-operative SARS-CoV-2 infection",
"3-4 weeks record of pre-operative SARS-CoV-2 infection",
"5-6 weeks record of pre-operative SARS-CoV-2 infection")
weekly_windowed_proportion_7wkPreOpInfection <-
data %>%
group_by(Year_surgery, Month_surgery, Week_surgery) %>%
summarise(
weekly_7wk = sum(preOperative_infection_status %in%
relevant_preOperative_infection_status),
weekly_n = n(),
weekly_7wkPreOpInfection = weekly_7wk / weekly_n
)
# Join to a left backbone of all weeks.
weekly_windowed_proportion_7wkPreOpInfection <-
backbone %>% dplyr::left_join(weekly_windowed_proportion_7wkPreOpInfection,
by = c("Year_surgery", "Month_surgery",
"Week_surgery")) %>%
tidyr::replace_na(list("weekly_7wkPreOpInfection" = 0, "weekly_7wk" = 0,
"weekly_n" = 0))
View(weekly_windowed_proportion_7wkPreOpInfection)
